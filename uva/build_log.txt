


################### make ###################

/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-recursive
Making all in src
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Connection.o -MD -MP -MF .deps/Connection.Tpo -c -o Connection.o Connection.cpp
mv -f .deps/Connection.Tpo .deps/Connection.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT SenseHandler.o -MD -MP -MF .deps/SenseHandler.Tpo -c -o SenseHandler.o SenseHandler.cpp
mv -f .deps/SenseHandler.Tpo .deps/SenseHandler.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT ActHandler.o -MD -MP -MF .deps/ActHandler.Tpo -c -o ActHandler.o ActHandler.cpp
mv -f .deps/ActHandler.Tpo .deps/ActHandler.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT SoccerTypes.o -MD -MP -MF .deps/SoccerTypes.Tpo -c -o SoccerTypes.o SoccerTypes.cpp
SoccerTypes.cpp:870:9: warning: comparison of array 'this->str' not equal to a null pointer is always true [-Wtautological-pointer-compare]
    if (str != NULL && str[0] != '\0')
        ^~~    ~~~~
SoccerTypes.cpp:1257:25: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
        sprintf(strBuf, ObjectNames[(int)o]);
                        ^~~~~~~~~~~~~~~~~~~
SoccerTypes.cpp:1257:25: note: treat the string as an argument to avoid this
        sprintf(strBuf, ObjectNames[(int)o]);
                        ^
                        "%s", 
2 warnings generated.
mv -f .deps/SoccerTypes.Tpo .deps/SoccerTypes.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Objects.o -MD -MP -MF .deps/Objects.Tpo -c -o Objects.o Objects.cpp
mv -f .deps/Objects.Tpo .deps/Objects.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT WorldModel.o -MD -MP -MF .deps/WorldModel.Tpo -c -o WorldModel.o WorldModel.cpp
WorldModel.cpp:2427:31: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
        sprintf(strColorLeft, strColorRight);
                              ^~~~~~~~~~~~~
WorldModel.cpp:2427:31: note: treat the string as an argument to avoid this
        sprintf(strColorLeft, strColorRight);
                              ^
                              "%s", 
1 warning generated.
mv -f .deps/WorldModel.Tpo .deps/WorldModel.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT WorldModelHighLevel.o -MD -MP -MF .deps/WorldModelHighLevel.Tpo -c -o WorldModelHighLevel.o WorldModelHighLevel.cpp
mv -f .deps/WorldModelHighLevel.Tpo .deps/WorldModelHighLevel.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT WorldModelPredict.o -MD -MP -MF .deps/WorldModelPredict.Tpo -c -o WorldModelPredict.o WorldModelPredict.cpp
WorldModelPredict.cpp:644:41: warning: operator '?:' has lower precedence than '+'; '+' will be evaluated first [-Wparentheses]
    AngDeg angTmp = angTo + (bMoveBack) ? 180 : 0;
                    ~~~~~~~~~~~~~~~~~~~ ^
WorldModelPredict.cpp:644:41: note: place parentheses around the '+' expression to silence this warning
    AngDeg angTmp = angTo + (bMoveBack) ? 180 : 0;
                                        ^
                    (                  )
WorldModelPredict.cpp:644:41: note: place parentheses around the '?:' expression to evaluate it first
    AngDeg angTmp = angTo + (bMoveBack) ? 180 : 0;
                                        ^
                            (                    )
1 warning generated.
mv -f .deps/WorldModelPredict.Tpo .deps/WorldModelPredict.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT WorldModelUpdate.o -MD -MP -MF .deps/WorldModelUpdate.Tpo -c -o WorldModelUpdate.o WorldModelUpdate.cpp
mv -f .deps/WorldModelUpdate.Tpo .deps/WorldModelUpdate.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT ServerSettings.o -MD -MP -MF .deps/ServerSettings.Tpo -c -o ServerSettings.o ServerSettings.cpp
mv -f .deps/ServerSettings.Tpo .deps/ServerSettings.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT PlayerSettings.o -MD -MP -MF .deps/PlayerSettings.Tpo -c -o PlayerSettings.o PlayerSettings.cpp
mv -f .deps/PlayerSettings.Tpo .deps/PlayerSettings.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT GenericValues.o -MD -MP -MF .deps/GenericValues.Tpo -c -o GenericValues.o GenericValues.cpp
mv -f .deps/GenericValues.Tpo .deps/GenericValues.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Formations.o -MD -MP -MF .deps/Formations.Tpo -c -o Formations.o Formations.cpp
mv -f .deps/Formations.Tpo .deps/Formations.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Geometry.o -MD -MP -MF .deps/Geometry.Tpo -c -o Geometry.o Geometry.cpp
mv -f .deps/Geometry.Tpo .deps/Geometry.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Parse.o -MD -MP -MF .deps/Parse.Tpo -c -o Parse.o Parse.cpp
mv -f .deps/Parse.Tpo .deps/Parse.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Logger.o -MD -MP -MF .deps/Logger.Tpo -c -o Logger.o Logger.cpp
mv -f .deps/Logger.Tpo .deps/Logger.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT BasicPlayer.o -MD -MP -MF .deps/BasicPlayer.Tpo -c -o BasicPlayer.o BasicPlayer.cpp
BasicPlayer.cpp:478:13: warning: taking the absolute value of unsigned type 'bool' has no effect [-Wabsolute-value]
        if (fabs(powerOrAngle <= 180))
            ^
BasicPlayer.cpp:478:13: note: remove the call to 'fabs' since unsigned values cannot be negative
        if (fabs(powerOrAngle <= 180))
            ^~~~
BasicPlayer.cpp:478:13: warning: implicit conversion turns floating-point number into bool: 'double' to 'bool' [-Wimplicit-conversion-floating-point-to-bool]
        if (fabs(powerOrAngle <= 180))
        ~~  ^~~~~~~~~~~~~~~~~~~~~~~~~
2 warnings generated.
mv -f .deps/BasicPlayer.Tpo .deps/BasicPlayer.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Player.o -MD -MP -MF .deps/Player.Tpo -c -o Player.o Player.cpp
mv -f .deps/Player.Tpo .deps/Player.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT PlayerTeams.o -MD -MP -MF .deps/PlayerTeams.Tpo -c -o PlayerTeams.o PlayerTeams.cpp
mv -f .deps/PlayerTeams.Tpo .deps/PlayerTeams.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT main.o -MD -MP -MF .deps/main.Tpo -c -o main.o main.cpp
mv -f .deps/main.Tpo .deps/main.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT Utilities.o -MD -MP -MF .deps/Utilities.Tpo -c -o Utilities.o Utilities.cpp
mv -f .deps/Utilities.Tpo .deps/Utilities.Po
/bin/sh ../libtool  --tag=CXX   --mode=link g++ -std=c++11 -g -O2   -o trilearn_player Connection.o SenseHandler.o ActHandler.o SoccerTypes.o Objects.o WorldModel.o WorldModelHighLevel.o WorldModelPredict.o WorldModelUpdate.o ServerSettings.o PlayerSettings.o GenericValues.o Formations.o Geometry.o Parse.o Logger.o BasicPlayer.o Player.o PlayerTeams.o main.o Utilities.o  -lpthread 
libtool: link: g++ -std=c++11 -g -O2 -o trilearn_player Connection.o SenseHandler.o ActHandler.o SoccerTypes.o Objects.o WorldModel.o WorldModelHighLevel.o WorldModelPredict.o WorldModelUpdate.o ServerSettings.o PlayerSettings.o GenericValues.o Formations.o Geometry.o Parse.o Logger.o BasicPlayer.o Player.o PlayerTeams.o main.o Utilities.o -Wl,-bind_at_load  -lpthread
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT BasicCoach.o -MD -MP -MF .deps/BasicCoach.Tpo -c -o BasicCoach.o BasicCoach.cpp
mv -f .deps/BasicCoach.Tpo .deps/BasicCoach.Po
g++ -DHAVE_CONFIG_H -I. -I..    -std=c++11 -g -O2 -MT mainCoach.o -MD -MP -MF .deps/mainCoach.Tpo -c -o mainCoach.o mainCoach.cpp
mv -f .deps/mainCoach.Tpo .deps/mainCoach.Po
/bin/sh ../libtool  --tag=CXX   --mode=link g++ -std=c++11 -g -O2   -o trilearn_coach Connection.o SenseHandler.o ActHandler.o SoccerTypes.o Objects.o WorldModel.o WorldModelHighLevel.o WorldModelPredict.o WorldModelUpdate.o ServerSettings.o PlayerSettings.o GenericValues.o Formations.o Geometry.o Parse.o Logger.o BasicCoach.o mainCoach.o  -lpthread 
libtool: link: g++ -std=c++11 -g -O2 -o trilearn_coach Connection.o SenseHandler.o ActHandler.o SoccerTypes.o Objects.o WorldModel.o WorldModelHighLevel.o WorldModelPredict.o WorldModelUpdate.o ServerSettings.o PlayerSettings.o GenericValues.o Formations.o Geometry.o Parse.o Logger.o BasicCoach.o mainCoach.o -Wl,-bind_at_load  -lpthread
make[2]: Nothing to be done for `all-am'.
